import React, { useState, useEffect } from 'react';
import './EditDesignLoading.scss';

const EditDesignLoading = ({ isVisible, onComplete }) => {
  const [showContent, setShowContent] = useState(false);
  const [globalProgress, setGlobalProgress] = useState(0);
  const [visibleShoes, setVisibleShoes] = useState(3);
  const [carouselOffset, setCarouselOffset] = useState(0);

  // Initialize animation
  useEffect(() => {
    if (isVisible) {
      setShowContent(true);
      setGlobalProgress(0);
      setVisibleShoes(3);
      setCarouselOffset(0);
    }
  }, [isVisible]);

  // Main animation controller
  useEffect(() => {
    if (!isVisible || !showContent) return;

    const interval = setInterval(() => {
      setGlobalProgress(prev => {
        const newProgress = prev + 1; // Increment by 1% each interval
        
        // Reveal 4th shoe at 30%
        if (newProgress >= 30 && visibleShoes === 3) {
          setVisibleShoes(4);
          setCarouselOffset(-120); // Slide left to show 4th shoe
        }
        
        // Reveal 5th shoe at 60%
        if (newProgress >= 60 && visibleShoes === 4) {
          setVisibleShoes(5);
          setCarouselOffset(-240); // Slide left to show 5th shoe
        }
        
        // Complete when reaching 100%
        if (newProgress >= 100) {
          setTimeout(() => {
            if (onComplete) {
              onComplete();
            }
          }, 500); // Small delay to show completion
          return 100;
        }
        
        return newProgress;
      });
    }, 80); // 80ms interval for smooth progression (100% in ~8 seconds)

    return () => {
      clearInterval(interval);
    };
  }, [isVisible, showContent, visibleShoes, onComplete]);

  if (!isVisible) return null;
  return (
    <div className={`edit-design-loading ${showContent ? 'fade-in' : 'fade-out'}`}>
      {/* Main Content Section */}
      <div className="loading-content">
        {/* Main Heading */}
        <h1 className="loading-title">EDIT YOUR DESIGN</h1>
        
        {/* Loading Spinner with Text */}
        <div className="loading-section">
          <div className="loading-spinner">
            <svg width="32" height="32" viewBox="0 0 32 32">
              <circle
                cx="16"
                cy="16"
                r="12"
                fill="none"
                stroke="#333"
                strokeWidth="2"
                strokeLinecap="round"
                strokeDasharray="60"
                strokeDashoffset="15"
              />
            </svg>
          </div>
          <span className="loading-text">Generating Designs</span>
        </div>

        {/* Shoe Carousel - Inside main content, under "editing the design" */}
        <div className="shoe-carousel">
          <div 
            className="carousel-container"
            style={{ 
              transform: `translateX(${carouselOffset}px)`,
              transition: 'transform 0.8s ease-in-out'
            }}
          >
            {Array.from({ length: 5 }, (_, index) => (
              <div
                key={index}
                className={`shoe-item ${index >= visibleShoes ? 'hidden' : ''}`}
                style={{ left: `${(index - 1) * 240}px` }}
              >
                {/* Shoe Silhouette SVG - Your Custom Design */}
                <div className="shoe-silhouette">
                  <svg width="220" height="100" viewBox="0 0 512 512">
                    {/* Main shoe body */}
                    <path 
                      d="M0 0 C2.99981183 2.4043718 4.185383 5.28674665 5.75 8.75 C10.9802118 19.42942261 18.89491653 25.35274429 30 29.25 C34.75498666 30.72589073 39.03391467 31.684693 44 32 C44.78246094 32.0515625 45.56492187 32.103125 46.37109375 32.15625 C62.17449766 32.71981864 76.7613103 28.79792902 88.6875 18.1875 C90.48210703 16.47875934 92.24816349 14.75183651 94 13 C97.30602547 12.48140777 99.81982542 12.16218738 102.65625 14.17578125 C109.67945117 21.68272331 111.60321029 32.17647835 112.71875 42.05859375 C112.84068726 43.08641464 112.96262451 44.11423553 113.08825684 45.17320251 C114.51448632 58.22821846 114.46745991 71.31108368 114.51123047 84.42797852 C114.52691095 87.69308212 114.55982821 90.95769945 114.59375 94.22265625 C114.59072876 95.20492691 114.58770752 96.18719757 114.58459473 97.19923401 C114.64756153 102.94749522 115.43226976 106.85820363 118 112 C118.15234375 114.328125 118.15234375 114.328125 117.9375 116.25 C117.9684375 118.10625 117.9684375 118.10625 118 120 C119.31337396 121.0260734 120.64664105 122.02727325 122 123 C122.5885735 128.98775438 121.10761514 134.07058927 119.3125 139.75 C118.94608398 141.02423828 118.94608398 141.02423828 118.57226562 142.32421875 C116.64710434 148.49448251 116.64710434 148.49448251 113.58984375 150.8828125 C112.30787109 151.43582031 112.30787109 151.43582031 111 152 C110.22140625 152.51820313 109.4428125 153.03640625 108.640625 153.5703125 C107.85171875 154.08335937 107.0628125 154.59640625 106.25 155.125 C105.47140625 155.64320313 104.6928125 156.16140625 103.890625 156.6953125 C96.83139771 159.88150428 87.79171989 159.27922845 80.140625 159.5625 C79.00723694 159.6049585 77.87384888 159.64741699 76.70611572 159.69116211 C65.26245938 160.08253283 53.82949624 160.07951048 42.3807373 160.01831055 C35.92052254 159.98573037 29.46028954 159.97369286 23 159.96875 C22.33334068 159.96820114 21.66668137 159.96765228 20.97982025 159.96708679 C7.80337125 159.96121908 -5.36619713 160.17101968 -18.53994751 160.42807007 C-43.95432054 160.92080006 -69.36432968 161.13853064 -94.7833252 161.17724609 C-98.5809607 161.1830318 -102.37853611 161.19333824 -106.17614746 161.20800781 C-143.65291742 161.34474852 -179.20509065 159.65623716 -215.5 149.5 C-216.35873718 149.26088898 -217.21747437 149.02177795 -218.10223389 148.77542114 C-220.58182541 148.07988684 -223.05712494 147.37096181 -225.53125 146.65625 C-226.26683136 146.4489476 -227.00241272 146.2416452 -227.76028442 146.02806091 C-233.53040886 144.32954459 -239.4370794 142.26700609 -243.99609375 138.234375 C-245.47773375 134.9367171 -245.22914243 131.78045629 -245.0625 128.25 C-244.85467716 121.83302537 -244.85467716 121.83302537 -246.0625 115.5625 C-248.32748441 106.95555924 -245.41266754 100.4332542 -241.0625 92.890625 C-237.95113493 88.52999971 -234.97256959 86.79625862 -230 85 C-228.98808594 84.62101562 -227.97617188 84.24203125 -226.93359375 83.8515625 C-221.19363449 81.83776674 -215.39179417 80.10044638 -209.5390625 78.4453125 C-187.40403038 72.18300505 -166.49451996 64.11525961 -145.70361328 54.27832031 C-142.59072856 52.8064886 -139.46834378 51.35590655 -136.34350586 49.90966797 C-130.99163887 47.40406424 -125.66907586 44.85241985 -120.39685059 42.18295288 C-111.85968219 37.86180523 -103.22097223 33.80947827 -94.5 29.875 C-93.80189209 29.55906891 -93.10378418 29.24313782 -92.38452148 28.91763306 C-14.03599125 -6.53399593 -14.03599125 -6.53399593 0 0 Z" 
                      fill="#000" 
                      className="shoe-body"
                      transform="translate(248,5)"
                    />
                    
                    {/* Animated fill */}
                    <defs>
                      <clipPath id={`shoe-clip-${index}`}>
                        <path d="M0 0 C2.99981183 2.4043718 4.185383 5.28674665 5.75 8.75 C10.9802118 19.42942261 18.89491653 25.35274429 30 29.25 C34.75498666 30.72589073 39.03391467 31.684693 44 32 C44.78246094 32.0515625 45.56492187 32.103125 46.37109375 32.15625 C62.17449766 32.71981864 76.7613103 28.79792902 88.6875 18.1875 C90.48210703 16.47875934 92.24816349 14.75183651 94 13 C97.30602547 12.48140777 99.81982542 12.16218738 102.65625 14.17578125 C109.67945117 21.68272331 111.60321029 32.17647835 112.71875 42.05859375 C112.84068726 43.08641464 112.96262451 44.11423553 113.08825684 45.17320251 C114.51448632 58.22821846 114.46745991 71.31108368 114.51123047 84.42797852 C114.52691095 87.69308212 114.55982821 90.95769945 114.59375 94.22265625 C114.59072876 95.20492691 114.58770752 96.18719757 114.58459473 97.19923401 C114.64756153 102.94749522 115.43226976 106.85820363 118 112 C118.15234375 114.328125 118.15234375 114.328125 117.9375 116.25 C117.9684375 118.10625 117.9684375 118.10625 118 120 C119.31337396 121.0260734 120.64664105 122.02727325 122 123 C122.5885735 128.98775438 121.10761514 134.07058927 119.3125 139.75 C118.94608398 141.02423828 118.94608398 141.02423828 118.57226562 142.32421875 C116.64710434 148.49448251 116.64710434 148.49448251 113.58984375 150.8828125 C112.30787109 151.43582031 112.30787109 151.43582031 111 152 C110.22140625 152.51820313 109.4428125 153.03640625 108.640625 153.5703125 C107.85171875 154.08335937 107.0628125 154.59640625 106.25 155.125 C105.47140625 155.64320313 104.6928125 156.16140625 103.890625 156.6953125 C96.83139771 159.88150428 87.79171989 159.27922845 80.140625 159.5625 C79.00723694 159.6049585 77.87384888 159.64741699 76.70611572 159.69116211 C65.26245938 160.08253283 53.82949624 160.07951048 42.3807373 160.01831055 C35.92052254 159.98573037 29.46028954 159.97369286 23 159.96875 C22.33334068 159.96820114 21.66668137 159.96765228 20.97982025 159.96708679 C7.80337125 159.96121908 -5.36619713 160.17101968 -18.53994751 160.42807007 C-43.95432054 160.92080006 -69.36432968 161.13853064 -94.7833252 161.17724609 C-98.5809607 161.1830318 -102.37853611 161.19333824 -106.17614746 161.20800781 C-143.65291742 161.34474852 -179.20509065 159.65623716 -215.5 149.5 C-216.35873718 149.26088898 -217.21747437 149.02177795 -218.10223389 148.77542114 C-220.58182541 148.07988684 -223.05712494 147.37096181 -225.53125 146.65625 C-226.26683136 146.4489476 -227.00241272 146.2416452 -227.76028442 146.02806091 C-233.53040886 144.32954459 -239.4370794 142.26700609 -243.99609375 138.234375 C-245.47773375 134.9367171 -245.22914243 131.78045629 -245.0625 128.25 C-244.85467716 121.83302537 -244.85467716 121.83302537 -246.0625 115.5625 C-248.32748441 106.95555924 -245.41266754 100.4332542 -241.0625 92.890625 C-237.95113493 88.52999971 -234.97256959 86.79625862 -230 85 C-228.98808594 84.62101562 -227.97617188 84.24203125 -226.93359375 83.8515625 C-221.19363449 81.83776674 -215.39179417 80.10044638 -209.5390625 78.4453125 C-187.40403038 72.18300505 -166.49451996 64.11525961 -145.70361328 54.27832031 C-142.59072856 52.8064886 -139.46834378 51.35590655 -136.34350586 49.90966797 C-130.99163887 47.40406424 -125.66907586 44.85241985 -120.39685059 42.18295288 C-111.85968219 37.86180523 -103.22097223 33.80947827 -94.5 29.875 C-93.80189209 29.55906891 -93.10378418 29.24313782 -92.38452148 28.91763306 C-14.03599125 -6.53399593 -14.03599125 -6.53399593 0 0 Z" transform="translate(248,5)" />
                      </clipPath>
                    </defs>
                    <rect
                      x="0"
                      y={169 - (globalProgress / 100) * 169}
                      width="371"
                      height={(globalProgress / 100) * 169}
                      fill="#ff0000"
                      clipPath={`url(#shoe-clip-${index})`}
                      className="shoe-fill"
                    />
                  </svg>
                  
                  {/* Percentage Overlay */}
                  <div className="percentage-overlay">
                    {globalProgress}%
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default EditDesignLoading;
